<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sanyang.logistics.jaj.mapper.OutWarehouseMapper" >
  <resultMap id="BaseResultMap" type="com.sanyang.logistics.base.pojo.OutWarehouse" >
    <id column="out_warehouse_id" property="outWarehouseId" jdbcType="INTEGER" />
    <result column="pickout_prod_id" property="pickoutProdId" jdbcType="INTEGER" />
    <result column="pickout_id" property="pickoutId" jdbcType="INTEGER" />
    <result column="posn_id" property="posnId" jdbcType="INTEGER" />
    <result column="posn_code" property="posnCode" jdbcType="VARCHAR" />
    <result column="prod_id" property="prodId" jdbcType="INTEGER" />
    <result column="package_name" property="packageName" jdbcType="VARCHAR" />
    <result column="out_amt" property="outAmt" jdbcType="INTEGER" />
    <result column="backup_area_code" property="backupAreaCode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    out_warehouse_id, pickout_prod_id, pickout_id, posn_id, posn_code, prod_id, package_name, 
    out_amt, backup_area_code
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sanyang.logistics.base.pojo.OutWarehouseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from out_warehouse
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from out_warehouse
    where out_warehouse_id = #{outWarehouseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from out_warehouse
    where out_warehouse_id = #{outWarehouseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanyang.logistics.base.pojo.OutWarehouseExample" >
    delete from out_warehouse
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanyang.logistics.base.pojo.OutWarehouse" >
    insert into out_warehouse (out_warehouse_id, pickout_prod_id, pickout_id, 
      posn_id, posn_code, prod_id, 
      package_name, out_amt, backup_area_code
      )
    values (#{outWarehouseId,jdbcType=INTEGER}, #{pickoutProdId,jdbcType=INTEGER}, #{pickoutId,jdbcType=INTEGER}, 
      #{posnId,jdbcType=INTEGER}, #{posnCode,jdbcType=VARCHAR}, #{prodId,jdbcType=INTEGER}, 
      #{packageName,jdbcType=VARCHAR}, #{outAmt,jdbcType=INTEGER}, #{backupAreaCode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sanyang.logistics.base.pojo.OutWarehouse" >
    insert into out_warehouse
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="outWarehouseId != null" >
        out_warehouse_id,
      </if>
      <if test="pickoutProdId != null" >
        pickout_prod_id,
      </if>
      <if test="pickoutId != null" >
        pickout_id,
      </if>
      <if test="posnId != null" >
        posn_id,
      </if>
      <if test="posnCode != null" >
        posn_code,
      </if>
      <if test="prodId != null" >
        prod_id,
      </if>
      <if test="packageName != null" >
        package_name,
      </if>
      <if test="outAmt != null" >
        out_amt,
      </if>
      <if test="backupAreaCode != null" >
        backup_area_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="outWarehouseId != null" >
        #{outWarehouseId,jdbcType=INTEGER},
      </if>
      <if test="pickoutProdId != null" >
        #{pickoutProdId,jdbcType=INTEGER},
      </if>
      <if test="pickoutId != null" >
        #{pickoutId,jdbcType=INTEGER},
      </if>
      <if test="posnId != null" >
        #{posnId,jdbcType=INTEGER},
      </if>
      <if test="posnCode != null" >
        #{posnCode,jdbcType=VARCHAR},
      </if>
      <if test="prodId != null" >
        #{prodId,jdbcType=INTEGER},
      </if>
      <if test="packageName != null" >
        #{packageName,jdbcType=VARCHAR},
      </if>
      <if test="outAmt != null" >
        #{outAmt,jdbcType=INTEGER},
      </if>
      <if test="backupAreaCode != null" >
        #{backupAreaCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanyang.logistics.base.pojo.OutWarehouseExample" resultType="java.lang.Integer" >
    select count(*) from out_warehouse
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update out_warehouse
    <set >
      <if test="record.outWarehouseId != null" >
        out_warehouse_id = #{record.outWarehouseId,jdbcType=INTEGER},
      </if>
      <if test="record.pickoutProdId != null" >
        pickout_prod_id = #{record.pickoutProdId,jdbcType=INTEGER},
      </if>
      <if test="record.pickoutId != null" >
        pickout_id = #{record.pickoutId,jdbcType=INTEGER},
      </if>
      <if test="record.posnId != null" >
        posn_id = #{record.posnId,jdbcType=INTEGER},
      </if>
      <if test="record.posnCode != null" >
        posn_code = #{record.posnCode,jdbcType=VARCHAR},
      </if>
      <if test="record.prodId != null" >
        prod_id = #{record.prodId,jdbcType=INTEGER},
      </if>
      <if test="record.packageName != null" >
        package_name = #{record.packageName,jdbcType=VARCHAR},
      </if>
      <if test="record.outAmt != null" >
        out_amt = #{record.outAmt,jdbcType=INTEGER},
      </if>
      <if test="record.backupAreaCode != null" >
        backup_area_code = #{record.backupAreaCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update out_warehouse
    set out_warehouse_id = #{record.outWarehouseId,jdbcType=INTEGER},
      pickout_prod_id = #{record.pickoutProdId,jdbcType=INTEGER},
      pickout_id = #{record.pickoutId,jdbcType=INTEGER},
      posn_id = #{record.posnId,jdbcType=INTEGER},
      posn_code = #{record.posnCode,jdbcType=VARCHAR},
      prod_id = #{record.prodId,jdbcType=INTEGER},
      package_name = #{record.packageName,jdbcType=VARCHAR},
      out_amt = #{record.outAmt,jdbcType=INTEGER},
      backup_area_code = #{record.backupAreaCode,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanyang.logistics.base.pojo.OutWarehouse" >
    update out_warehouse
    <set >
      <if test="pickoutProdId != null" >
        pickout_prod_id = #{pickoutProdId,jdbcType=INTEGER},
      </if>
      <if test="pickoutId != null" >
        pickout_id = #{pickoutId,jdbcType=INTEGER},
      </if>
      <if test="posnId != null" >
        posn_id = #{posnId,jdbcType=INTEGER},
      </if>
      <if test="posnCode != null" >
        posn_code = #{posnCode,jdbcType=VARCHAR},
      </if>
      <if test="prodId != null" >
        prod_id = #{prodId,jdbcType=INTEGER},
      </if>
      <if test="packageName != null" >
        package_name = #{packageName,jdbcType=VARCHAR},
      </if>
      <if test="outAmt != null" >
        out_amt = #{outAmt,jdbcType=INTEGER},
      </if>
      <if test="backupAreaCode != null" >
        backup_area_code = #{backupAreaCode,jdbcType=VARCHAR},
      </if>
    </set>
    where out_warehouse_id = #{outWarehouseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanyang.logistics.base.pojo.OutWarehouse" >
    update out_warehouse
    set pickout_prod_id = #{pickoutProdId,jdbcType=INTEGER},
      pickout_id = #{pickoutId,jdbcType=INTEGER},
      posn_id = #{posnId,jdbcType=INTEGER},
      posn_code = #{posnCode,jdbcType=VARCHAR},
      prod_id = #{prodId,jdbcType=INTEGER},
      package_name = #{packageName,jdbcType=VARCHAR},
      out_amt = #{outAmt,jdbcType=INTEGER},
      backup_area_code = #{backupAreaCode,jdbcType=VARCHAR}
    where out_warehouse_id = #{outWarehouseId,jdbcType=INTEGER}
  </update>
</mapper>